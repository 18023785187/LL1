{"version":3,"file":"ll1.js","mappings":"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","sources":["webpack://ll1/webpack/universalModuleDefinition","webpack://ll1/webpack/bootstrap","webpack://ll1/webpack/runtime/define property getters","webpack://ll1/webpack/runtime/hasOwnProperty shorthand","webpack://ll1/webpack/runtime/make namespace object","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://ll1/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://ll1/./src/constants.js","webpack://ll1/./src/utils.js","webpack://ll1/./src/splitGrammars.js","webpack://ll1/./src/makeFirstSet.js","webpack://ll1/./src/makeFollowSet.js","webpack://ll1/./src/makeSelectSet.js","webpack://ll1/./src/makePredictSet.js","webpack://ll1/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ll1\"] = factory();\n\telse\n\t\troot[\"ll1\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export const EMPTY_CHAIN = null;\nexport const OR = '|';\nexport const $ = '$';\n","\nexport function mergeSet(set1, set2) {\n  return new Set([...set1, ...set2]);\n}\n\nexport function isBlank(char) {\n  return char === ' ' || char === '\\t' || char === '\\n' || char === '\\r'\n}\n","import { EMPTY_CHAIN, OR } from './constants.js';\nimport { isBlank } from './utils.js'\n\n/**\n * 生成式必须以空格作为分隔符，以 | 作为或，以 null 作为空串\n * \n * 如: 1、['E -> ( id ) | null']\n *     2、['E -> ( id )', 'E -> null']\n * \n * 无论使用哪种写法最后返回的都会合并成一项，即合并成第一种写法的格式\n */\nexport function splitGrammars(grammars) {\n  const rules = [];\n  const ruleMap = new Map(); // 用于缓存已经创建的产生式，避免重复创建相关的产生式\n\n  for (let i = 0; i < grammars.length; ++i) {\n    const grammar = grammars[i];\n    let [left, right] = grammar.split('->');\n    if (!right || !right.trim()) throw new Error('Grammar is missing the right side');\n\n    let isDefined = true;\n    if (!ruleMap.has(left)) {\n      isDefined = false;\n      ruleMap.set(left, {\n        left: null,\n        right: []\n      });\n    }\n    const grammarRule = ruleMap.get(left);\n    grammarRule.left = left.trim();\n\n    let fragment = [];\n    let str = '';\n    right += ' ';\n    for (let j = 0; j < right.length; ++j) {\n      const char = right[j];\n\n      if (isBlank(char)) {\n        if (str === 'null') {\n          fragment.push(EMPTY_CHAIN);\n        } else if (str) {\n          fragment.push(str);\n        }\n        str = '';\n      } else if (char === '|') {\n        grammarRule.right.push(fragment);\n        fragment = [];\n        str = '';\n      } else {\n        str += char;\n      }\n    }\n\n    if (fragment.length) grammarRule.right.push(fragment);\n    !isDefined && rules.push(grammarRule);\n  }\n\n  return rules;\n}\n\nexport function toGrammars(rules, isExpand = false) {\n  const grammars = [];\n\n  rules.forEach(({ left, right }) => {\n    if (isExpand) {\n      right.forEach(r => {\n        let grammar = '';\n\n        grammar += `${left} -> ${r.map(chain => chain + '').join(' ')}`;\n        grammars.push(grammar);\n      });\n    } else {\n      let grammar = '';\n\n      grammar += `${left} -> `;\n      right.forEach(r => {\n        grammar += r.map(chain => chain + '').join(' ') + ` ${OR} `;\n      });\n\n      grammars.push(grammar.slice(0, -3));\n    }\n  });\n\n  return grammars;\n}\n\n/**\n * 基于 splitGrammars 方法返回的 rules 进行提取公共因子\n * \n * 提取公共因子产生的新表达式用原表达式加 ' 表示，如有多个公共因子以此类推，如：\n * \n *  E -> + a | + b | * c | * d | y\n * \n * 提取后为\n * \n *  E -> + E' | * E'' | y\n *  E' -> a | b\n *  E'' -> c | d\n */\nexport function combineLikeTerms(rules) {\n  const mergeRight = (right) => [...right.map(grammar => [...grammar])];\n  const rightToString = (right) => right.join(OR);\n  const newRules = [];\n\n  const commonSuffix = new Map(); /** 复用已有产生式或提取公共因子后剩余后缀的产生式 */\n  rules.forEach(({ left, right }) => {\n    commonSuffix.set(rightToString(right), left);\n  });\n\n  rules.forEach(({ left, right }) => {\n    handleRule(left, right, new Map());\n  });\n\n  function handleRule(left, right) {\n    commonSuffix.set(rightToString(right), left);\n\n    let repeat = 0;\n    let isInsertRoot = false; // 标记新产生式是否已推入 newRules\n    const grammarRule = {\n      left,\n      right: []\n    };\n\n    if (right.length === 1) {\n      grammarRule.right = mergeRight(right);\n      newRules.push(grammarRule);\n      return;\n    }\n\n    let prefix;\n    let chain;\n    const skips = []; // 存储已合并的项下标\n    for (let i = 0; i < right.length; ++i) { // 以当前产生式右边为参考系\n      if (skips.includes(i)) continue;\n      skips.push(i);\n\n      if (i === right.length - 1) {\n        grammarRule.right.push(right[i]);\n        return;\n      }\n\n      const grammar = right[i];\n      let pos = 0;\n\n      const commonGrammars = [];\n      commonGrammars.push(grammar);\n\n      prefix = '';\n      setPrefix:\n      while (pos < grammar.length) { // 当前产生式右边到尽头时，结束遍历\n        chain = grammar[pos];\n\n        let isEqualChain = false;\n        if (pos === 0) {\n          for (let j = i + 1; j < right.length; ++j) {\n            const curGrammar = right[j];\n            const curChain = curGrammar[pos];\n            if (!curChain) continue;\n\n            if (curChain === chain) {\n              isEqualChain = true;\n              skips.push(j);\n\n              commonGrammars.push(right[j]);\n            }\n          }\n        } else {\n          for (let j = i + 1; j < right.length; ++j) {\n            const curGrammar = right[j];\n            const curChain = curGrammar[pos];\n            if (!curChain || curChain !== chain || !skips.includes(j)) continue;\n            isEqualChain = true;\n          }\n        }\n        if (!isEqualChain) break setPrefix;\n\n        prefix += chain + OR;\n        pos++;\n      }\n\n      if (prefix) {\n        const suffixes = commonGrammars.map(exp => {\n          const suffix = exp.slice(prefix.slice(0, -1).split(OR).length);\n          if (!suffix.length) return [EMPTY_CHAIN];\n          return suffix;\n        });\n\n        let newLeft;\n        if (commonSuffix.has(rightToString(suffixes))) {\n          newLeft = commonSuffix.get(rightToString(suffixes));\n        } else {\n          newLeft = `${left}${\"'\".repeat(repeat)}'`;\n        }\n        const newRight = [...prefix.slice(0, -1).split(OR), newLeft];\n        grammarRule.right.push(newRight);\n        if (!isInsertRoot) {\n          newRules.push(grammarRule);\n          repeat++;\n        };\n\n        if (!commonSuffix.has(rightToString(suffixes)))\n          handleRule(newLeft, suffixes);\n      } else {\n        grammarRule.right.push([...right[i]]);\n        if (!isInsertRoot) {\n          newRules.push(grammarRule);\n        };\n      }\n      isInsertRoot = true;\n    }\n  }\n  return newRules;\n}\n\n/**\n * 基于 splitGrammars 方法返回的 rules 进行消除左递归\n * \n * 左递归分为直接左递归和间接左递归，直接左递归调用 clearDirectLeftRecursion 函数进行消除，间接左递归通过代入产生式降级为直接左递归进行消除，\n * 为了与提取公共因子进行区分，消除左递归引入的新产生式用 ` 标记，如：E -> E + T 消除后得 E -> T E`  E` -> + T E` | null\n * \n * A -> A a1 | A a2 | ... | A an | b1 | b2 | ... | bm\n * \n * ---->\n * \n *  A -> b1A` | b2A` | ... | bmA`\n *  A' -> a1A` | a2A` | ... | anA` | null\n * \n */\nexport function clearLeftRecursion(rules) {\n  const newRules = [];\n\n  rules.forEach(rule => {\n    newRules.push(\n      ...clearDirectLeftRecursion(rule)\n    );\n  });\n\n  function clearDirectLeftRecursion(\n    { left, right } /** rule */\n  ) {\n    const rules = [];\n    const newLeft = `${left}\\``;\n\n    const prefixGrammars = [];\n    const grammars = [];\n    let isEmpty = false;\n    right.forEach(grammar => {\n      if (grammar[0] === left) {\n        grammar.shift();\n        grammar.push(newLeft);\n        prefixGrammars.push(grammar);\n      } else if (grammar[0] === EMPTY_CHAIN) {\n        isEmpty = true;\n      } else {\n        grammar.push(newLeft);\n        grammars.push(grammar);\n      }\n    });\n\n    if (isEmpty) {\n      grammars.push([newLeft]);\n    }\n\n    rules.push(\n      {\n        left,\n        right: [...grammars]\n      },\n      {\n        left: newLeft,\n        right: [...prefixGrammars, [EMPTY_CHAIN]]\n      }\n    );\n\n    return rules;\n  }\n\n  return newRules;\n}\n","import { mergeSet } from './utils.js';\nimport { EMPTY_CHAIN, $ } from './constants.js';\n\n/**\n  1、依次遍历所有产生式，把串首终结符加入其 FIRST 集中。\n  2、如果最左串是非终结符，则把该非终结符的 FIRST 集推入到当前产生式中，如果该非终结符包含空，那么把该非终结符的 FIRST 集 - 空推入到当前产生式中，同时把该非终结符的下一个非终结符的 FIRST 集推入到当前产生式中，重复第二步直至遇到没有包含空的非终结符为止。\n  3、重新遍历所有产生式，重复执行步骤 1、2，直至所有产生式均无变化。\n */\nexport function makeFirstSet(rules, terminalSymbols) {\n  const isTerminal = (chain) => terminalSymbols.includes(chain) || chain === EMPTY_CHAIN;\n\n  const firstSet = {};\n  rules.forEach(({ left }) => firstSet[left] = []);\n\n  let isSetChanged;\n  do {\n    isSetChanged = false;\n    rules.forEach(({ left, right }) => {\n      let sets = new Set(firstSet[left]);\n      const prevLength = sets.size;\n\n      // 处理诸如 E -> A | B 的情况需要遍历\n      right.forEach(grammar => {\n        let first = 0;\n        let chain = grammar[first];\n\n        while (chain?.[0] === $) {\n          chain = grammar[++first];\n        }\n\n        if (isTerminal(chain)) sets.add(chain);\n        else if (firstSet[chain].includes(EMPTY_CHAIN)) {\n\n          do {\n            const nextSet = new Set(firstSet[chain]);\n            nextSet.delete(EMPTY_CHAIN);\n            sets = mergeSet(sets, nextSet);\n            first += 1;\n            chain = grammar[first];\n\n            while (chain?.[0] === $) {\n              chain = grammar[++first];\n            }\n\n          } while (firstSet[chain]?.includes(EMPTY_CHAIN));\n\n          if (isTerminal(chain)) sets.add(chain);\n          else if(chain) sets = mergeSet(sets, firstSet[chain]);\n        }\n        else sets = mergeSet(sets, firstSet[chain]);\n      });\n\n      firstSet[left] = [...sets];\n      if (prevLength !== sets.size) isSetChanged = true;\n    });\n\n  } while (isSetChanged);\n\n  return firstSet;\n}\n\nexport function makeUnionFirstSet(chainSet, firstSet, terminalSymbols) {\n  const isTerminal = (chain) => terminalSymbols.includes(chain) || chain === EMPTY_CHAIN;\n\n  const unionFirstSet = [];\n\n  chainSet.some(chain => {\n    if(chain[0] === $) return false\n    if (isTerminal(chain)) {\n      unionFirstSet.push(chain);\n    } else if (!firstSet[chain].includes(EMPTY_CHAIN)) {\n      unionFirstSet.push(...firstSet[chain]);\n    } else {\n      return false;\n    }\n    return true;\n  });\n\n  return unionFirstSet;\n}\n","import { makeFirstSet } from './makeFirstSet.js';\nimport { mergeSet } from './utils.js';\nimport { EMPTY_CHAIN, $ } from './constants.js';\n\n/**\n    设有式子 S -> (L) | aL | LC，规则如下：\n  1、如果 L 的右边是终结符，那么把这个终结符加到 L 的 FOLLOW 集中。\n  2、如果 L 的右边是非终结符，那么把这个非终结符的 FIRST 集 - 空 加到 L 的 FOLLOW 集中。\n  3、如果 L 处在末尾，那么把 -> 左边符号的 FOLLOW 集 加入到 L 的 FOLLOW 集中。\n  4、当 L 的式子包含空时，对 L 的左边非终结符采用 1、2、3 规则，依次类推。\n\n  推导过程\n\n  1、在第一个产生式加入 $ 作为终止符。\n  2、依次遍历产生式，依序遍历产生式右边，对每个串运用规则。\n  3、重复执行步骤 2，直至所有产生式均无变化。\n */\nexport function makeFollowSet(\n  rules,\n  terminalSymbols,\n  firstSet = makeFirstSet(rules, terminalSymbols)\n) {\n  const isTerminal = (chain) => terminalSymbols.includes(chain) || chain === EMPTY_CHAIN;\n\n  const followSet = {};\n  rules.forEach(({ left }) => followSet[left] = []);\n  followSet[rules[0].left].push($);\n\n  const emptySet = new Set();\n  for (const tag in firstSet) firstSet[tag].includes(EMPTY_CHAIN) && emptySet.add(tag);\n\n  let isSetChanged;\n  do {\n\n    isSetChanged = false;\n    rules.forEach(({ left, right }) => {\n      right.forEach(grammar => {\n        for (let i = grammar.length - 1; i >= 0; --i) {\n          const chain = grammar[i];\n\n          if (isTerminal(chain) || chain[0] === $) continue;\n\n          let prevLength = followSet[chain].length;\n          if (i === grammar.length - 1) {\n            followSet[chain] = [...mergeSet(followSet[chain], followSet[left])];\n          } else {\n            let j = i + 1;\n            let nextChain = grammar[j];\n\n            while(j < grammar.length && nextChain[0] === $) {\n              nextChain = grammar[++j]\n            }\n\n            if (isTerminal(nextChain)) {\n              followSet[chain] = [...mergeSet(followSet[chain], [nextChain])];\n            } else {\n              const nextSet = new Set(firstSet[nextChain]);\n              nextSet.delete(EMPTY_CHAIN);\n              followSet[chain] = [...mergeSet(followSet[chain], nextSet)];\n\n              while (j < grammar.length && (emptySet.has(nextChain) || nextChain[0] === $)) nextChain = grammar[++j];\n              if (j === grammar.length) followSet[chain] = [...mergeSet(followSet[chain], followSet[left])];\n            }\n          }\n\n          if (followSet[chain].length !== prevLength) isSetChanged = true;\n        }\n      });\n    });\n\n  } while (isSetChanged);\n\n  return followSet;\n}\n","import { makeFirstSet, makeUnionFirstSet } from './makeFirstSet.js';\nimport { makeFollowSet } from './makeFollowSet.js';\nimport { mergeSet } from './utils.js';\nimport { EMPTY_CHAIN, $ } from './constants.js';\n\n/**\n  对于形似 A -> ab 的产生式，其 SELECT 集为 FIRST(ab)。\n  对于形似 A -> null 的产生式，其 SELECT 集为 FOLLOW(A)。\n\n  推导过程\n\n    1、对每个产生式进行拆分，如：\n    E -> id | null 拆分成 E -> id，E -> null。\n    2、运用规则求出每个产生式的 SELECT 集。\n */\nexport function makeSelectSet(\n  rules,\n  terminalSymbols,\n  firstSet = makeFirstSet(rules, terminalSymbols),\n  followSet = makeFollowSet(rules, terminalSymbols)\n) {\n  const selectSet = new Map();\n\n  rules.forEach(({ left, right }) => {\n    right.forEach(chainSet => {\n      let pos = 0\n      let chain = chainSet[pos];\n      const newRule = { left, right: chainSet };\n\n      while(pos < chainSet.length && chain && chain[0] === $) {\n        chain = chainSet[++pos]\n      }\n\n      if (chain === EMPTY_CHAIN) {\n        selectSet.set(newRule, followSet[left]);\n      } else {\n        selectSet.set(newRule, makeUnionFirstSet(chainSet, firstSet, terminalSymbols));\n      }\n    });\n  });\n\n  return selectSet;\n}\n\nexport function isNotIntersect(selectSet) {\n  const map = new Map();\n\n  for (const [{ left }, sets] of selectSet) {\n    if (map.has(left)) {\n      const prevSets = map.get(left);\n      const newSets = mergeSet(prevSets, sets);\n      if (newSets.size !== prevSets.size + sets.length) {\n        return false;\n      }\n      map.set(left, newSets);\n    } else {\n      map.set(left, new Set(sets));\n    }\n  }\n\n  return true;\n}\n","import { isNotIntersect } from './makeSelectSet.js';\n\nexport function makePredictSet(selectSet) {\n  if (!isNotIntersect(selectSet))\n    throw new Error('Select set does not satisfy the LL(1) grammar');\n\n  const predictSet = new Map();\n\n  for (const [{ left, right }, sets] of selectSet) {\n    sets.forEach(chain => {\n      if (!predictSet.has(chain)) predictSet.set(chain, new Map());\n\n      const chainMap = predictSet.get(chain);\n\n      chainMap.set(left, right);\n    });\n  }\n\n  return predictSet;\n}\n","// run npx babel-node index.js\nimport { splitGrammars, toGrammars, combineLikeTerms, clearLeftRecursion } from './splitGrammars.js';\nimport { makeFirstSet, makeUnionFirstSet } from './makeFirstSet.js';\nimport { makeFollowSet } from './makeFollowSet.js';\nimport { makeSelectSet, isNotIntersect } from './makeSelectSet.js';\nimport { makePredictSet } from './makePredictSet.js';\nimport { EMPTY_CHAIN, $ } from './constants.js';\n\nfunction makeLL1(grammars, terminalSymbols) {\n  const rules = splitGrammars(grammars);\n\n  const firstSet = makeFirstSet(rules, terminalSymbols);\n  const followSet = makeFollowSet(rules, terminalSymbols, firstSet);\n  const selectSet = makeSelectSet(rules, terminalSymbols, firstSet, followSet);\n  const predictSet = makePredictSet(selectSet);\n\n  return {\n    startSymbol: rules[0].left,\n    firstSet,\n    followSet,\n    selectSet,\n    predictSet,\n    print() {\n      const leftSet = [];\n      const chainSet = [];\n\n      const indent = 2;\n      let maxLength = indent;\n\n      for (const [chain] of predictSet) {\n        chainSet.push(chain);\n        maxLength = Math.max(maxLength, chain.length + indent);\n      }\n      for (const left in firstSet) {\n        leftSet.push(left);\n        maxLength = Math.max(maxLength, left.length + indent);\n      }\n\n      const result = new Array(leftSet.length + 1).fill([]).map(() => new Array(chainSet.length + 1).fill(''));\n\n      for (let i = 0; i < chainSet.length; ++i) {\n        result[0][i + 1] = chainSet[i];\n      }\n      for (let i = 0; i < leftSet.length; ++i) {\n        result[i + 1][0] = leftSet[i];\n      }\n\n      for (const [chain, ruleMap] of predictSet) {\n        const col = result[0].indexOf(chain);\n        let row;\n\n        for (const [left, right] of ruleMap) {\n          for (let i = 0; i < leftSet.length; ++i) {\n            if (result[i + 1][0] === left) {\n              row = i + 1;\n              break;\n            }\n          }\n\n          result[row][col] = `-> ${right.map(item => item + '').join(' ')}`;\n\n          maxLength = Math.max(maxLength, result[row][col].length + indent);\n        }\n      }\n\n      let colLength = (maxLength + indent);\n      let logStr = '';\n      let splitStr = '\\n' + ('|' + '-'.repeat(colLength)).repeat(chainSet.length + 1) + '|\\n';\n      for (let i = 0; i < result.length; ++i) {\n        logStr += splitStr + '|';\n\n        for (let j = 0; j < result[i].length; ++j) {\n          const term = i === 0 || j === 0 ?\n            \" \\x1b[33;1m \" + result[i][j] + \" \\x1b[0m \" :\n            \" \\x1b[32;1m \" + result[i][j] + \" \\x1b[0m \";\n          logStr += term + ' '.repeat(maxLength + 13 - term.length) + '|';\n        }\n      }\n      logStr += splitStr;\n      console.log(logStr);\n    }\n  };\n}\n\nexport {\n  makeLL1,\n  splitGrammars,\n  toGrammars,\n  combineLikeTerms,\n  clearLeftRecursion,\n  makeFirstSet,\n  makeUnionFirstSet,\n  makeFollowSet,\n  makeSelectSet,\n  isNotIntersect,\n  makePredictSet,\n  EMPTY_CHAIN,\n  $,\n};\n"],"names":["EMPTY_CHAIN","OR","$","mergeSet","set1","set2","Set","isBlank","char","splitGrammars","grammars","rules","ruleMap","Map","i","length","grammar","split","left","right","trim","Error","isDefined","has","set","grammarRule","get","fragment","str","j","push","toGrammars","isExpand","forEach","r","map","chain","join","slice","combineLikeTerms","mergeRight","rightToString","newRules","commonSuffix","handleRule","repeat","isInsertRoot","prefix","skips","includes","pos","commonGrammars","setPrefix","isEqualChain","curGrammar","curChain","suffixes","exp","suffix","newLeft","newRight","clearLeftRecursion","rule","clearDirectLeftRecursion","prefixGrammars","isEmpty","shift","makeFirstSet","terminalSymbols","isTerminal","firstSet","isSetChanged","sets","prevLength","size","first","add","nextSet","makeUnionFirstSet","chainSet","unionFirstSet","some","makeFollowSet","followSet","emptySet","tag","nextChain","makeSelectSet","selectSet","newRule","isNotIntersect","prevSets","newSets","makePredictSet","predictSet","chainMap","makeLL1","startSymbol","print","leftSet","indent","maxLength","Math","max","result","Array","fill","col","indexOf","row","item","colLength","logStr","splitStr","term","console","log"],"sourceRoot":""}